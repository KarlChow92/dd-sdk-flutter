// Autogenerated from Pigeon (v1.0.12), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTDdSdkConfiguration;

@interface FLTDdSdkConfiguration : NSObject
@property(nonatomic, copy, nullable) NSString * clientToken;
@property(nonatomic, copy, nullable) NSString * env;
@property(nonatomic, copy, nullable) NSString * applicationId;
@property(nonatomic, strong, nullable) NSNumber * nativeCrashReportEnabled;
@property(nonatomic, strong, nullable) NSNumber * sampleRate;
@property(nonatomic, copy, nullable) NSString * site;
@property(nonatomic, copy, nullable) NSString * trackingConsent;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, id> * additionalConfig;
@end

/// The codec used by FLTDdSdkPigeon.
NSObject<FlutterMessageCodec> *FLTDdSdkPigeonGetCodec(void);

@protocol FLTDdSdkPigeon
- (void)initializeConfiguration:(FLTDdSdkConfiguration *)configuration error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTDdSdkPigeonSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTDdSdkPigeon> *_Nullable api);

/// The codec used by FLTDdLogsPigeon.
NSObject<FlutterMessageCodec> *FLTDdLogsPigeonGetCodec(void);

@protocol FLTDdLogsPigeon
- (void)debugMessage:(NSString *)message context:(NSDictionary<NSString *, id> *)context error:(FlutterError *_Nullable *_Nonnull)error;
- (void)infoMessage:(NSString *)message context:(NSDictionary<NSString *, id> *)context error:(FlutterError *_Nullable *_Nonnull)error;
- (void)warnMessage:(NSString *)message context:(NSDictionary<NSString *, id> *)context error:(FlutterError *_Nullable *_Nonnull)error;
- (void)errorMessage:(NSString *)message context:(NSDictionary<NSString *, id> *)context error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTDdLogsPigeonSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTDdLogsPigeon> *_Nullable api);

NS_ASSUME_NONNULL_END
